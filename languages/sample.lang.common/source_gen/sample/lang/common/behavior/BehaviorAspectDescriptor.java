package sample.lang.common.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myIPointerTarget__BehaviorDescriptor = new IPointerTarget__BehaviorDescriptor();
  private final BHDescriptor myPointsTo__BehaviorDescriptor = new PointsTo__BehaviorDescriptor();
  private final BHDescriptor myISmartRef__BehaviorDescriptor = new ISmartRef__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt_a0g = concept;
    switch (index_846f5o_a0g.index(cncpt_a0g)) {
      case 0:
        return myIPointerTarget__BehaviorDescriptor;
      case 1:
        return myISmartRef__BehaviorDescriptor;
      case 2:
        return myPointsTo__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0g = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0xc1700382310d4ee1L, 0x9c2a40abb0a5fca3L, 0x2f9ba7da1a4d85eeL), MetaIdFactory.conceptId(0xc1700382310d4ee1L, 0x9c2a40abb0a5fca3L, 0x72082dd37174e49eL), MetaIdFactory.conceptId(0xc1700382310d4ee1L, 0x9c2a40abb0a5fca3L, 0x72082dd37174e48eL)).seal();
}
