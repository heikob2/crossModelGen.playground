package sample.lang.common.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_IPointerTarget;
  private ConceptPresentation props_ISmartRef;
  private ConceptPresentation props_PointedBy;
  private ConceptPresentation props_PointsTo;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.IPointerTarget:
        if (props_IPointerTarget == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IPointerTarget = cpb.create();
        }
        return props_IPointerTarget;
      case LanguageConceptSwitch.ISmartRef:
        if (props_ISmartRef == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ISmartRef = cpb.create();
        }
        return props_ISmartRef;
      case LanguageConceptSwitch.PointedBy:
        if (props_PointedBy == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xc1700382310d4ee1L, 0x9c2a40abb0a5fca3L, 0x72082dd37174e4b9L, 0x72082dd3717533f9L, "inref", "", "");
          props_PointedBy = cpb.create();
        }
        return props_PointedBy;
      case LanguageConceptSwitch.PointsTo:
        if (props_PointsTo == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_PointsTo = cpb.create();
        }
        return props_PointsTo;
    }
    return null;
  }
}
