package sample.lang.common.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptIPointerTarget = createDescriptorForIPointerTarget();
  /*package*/ final ConceptDescriptor myConceptISmartRef = createDescriptorForISmartRef();
  /*package*/ final ConceptDescriptor myConceptPointedBy = createDescriptorForPointedBy();
  /*package*/ final ConceptDescriptor myConceptPointsTo = createDescriptorForPointsTo();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptIPointerTarget, myConceptISmartRef, myConceptPointedBy, myConceptPointsTo);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.IPointerTarget:
        return myConceptIPointerTarget;
      case LanguageConceptSwitch.ISmartRef:
        return myConceptISmartRef;
      case LanguageConceptSwitch.PointedBy:
        return myConceptPointedBy;
      case LanguageConceptSwitch.PointsTo:
        return myConceptPointsTo;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForIPointerTarget() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("sample.lang.common", "IPointerTarget", 0xc1700382310d4ee1L, 0x9c2a40abb0a5fca3L, 0x2f9ba7da1a4d85eeL);
    b.interface_();
    b.origin("r:c13224d6-874e-4c7a-86b8-1e0747e6561b(sample.lang.common.structure)/3430520096358761966");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForISmartRef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("sample.lang.common", "ISmartRef", 0xc1700382310d4ee1L, 0x9c2a40abb0a5fca3L, 0x72082dd37174e49eL);
    b.interface_();
    b.origin("r:c13224d6-874e-4c7a-86b8-1e0747e6561b(sample.lang.common.structure)/8216867906302305438");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPointedBy() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("sample.lang.common", "PointedBy", 0xc1700382310d4ee1L, 0x9c2a40abb0a5fca3L, 0x72082dd37174e4b9L);
    b.class_(false, false, false);
    b.origin("r:c13224d6-874e-4c7a-86b8-1e0747e6561b(sample.lang.common.structure)/8216867906302305465");
    b.associate("inref", 0x72082dd3717533f9L).target(0xc1700382310d4ee1L, 0x9c2a40abb0a5fca3L, 0x72082dd37174e48eL).optional(false).origin("8216867906302325753").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPointsTo() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("sample.lang.common", "PointsTo", 0xc1700382310d4ee1L, 0x9c2a40abb0a5fca3L, 0x72082dd37174e48eL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c13224d6-874e-4c7a-86b8-1e0747e6561b(sample.lang.common.structure)/8216867906302305422");
    b.aggregate("ref", 0x72082dd37174e48fL).target(0xc1700382310d4ee1L, 0x9c2a40abb0a5fca3L, 0x72082dd37174e49eL).optional(false).ordered(true).multiple(false).origin("8216867906302305423").done();
    return b.create();
  }
}
